#!/usr/bin/env bash
set -euo pipefail

LOCK=/tmp/run_trading_stack.lock
exec 9>"$LOCK" || true
flock -n 9 || { echo "Launcher already running (lock: $LOCK)"; exit 0; }

SESSION="${SESSION_NAME:-omega}"
MON_DIR="$HOME/monitoring"
DC="$MON_DIR/docker-compose.yml"
LOG_DIR="$HOME/logs"

export IBKR_HOST="${IBKR_HOST:-127.0.0.1}"
export IBKR_PORT="${IBKR_PORT:-4002}"
export IBKR_CLIENT_ID="${IBKR_CLIENT_ID:-9002}"
export ALLOW_ORDERS="${ALLOW_ORDERS:-0}"
export DRY_RUN="${DRY_RUN:-1}"

mkdir -p "$LOG_DIR"

echo "[1/5] Monitoring stack up…"
if [ -f "$DC" ]; then
  docker compose -f "$DC" up -d
  PGU=$(awk -F= '/^PG_USER/{print $2}' "$MON_DIR/.env")
  PGD=$(awk -F= '/^PG_DB/{print $2}'  "$MON_DIR/.env")
  until docker compose -f "$DC" exec -T db pg_isready -U "$PGU" -d "$PGD" >/dev/null 2>&1; do
    sleep 1
  done
else
  echo "WARN: $DC not found; skipping monitoring bring-up."
fi


echo "[2/5] IB Gateway smoke check…"
ok=0
for i in {1..6}; do
  IBKR_CLIENT_ID="${IBKR_SMOKE_CLIENT_ID:-9003}" python3 ~/smoke_ib_connect.py >/dev/null 2>>"$LOG_DIR/ib_smoke.err" && { ok=1; break; }
  sleep 5
done
if [ "$ok" -ne 1 ]; then
  echo "ERROR: IB smoke failed after retries. Ensure IB Gateway is running & logged in (VNC), then retry."
  exit 2
fi

echo "[3/5] Starting tmux session: $SESSION"
if command -v tmux >/dev/null 2>&1; then
  if tmux has-session -t "$SESSION" 2>/dev/null; then
    echo "Session exists. Attaching…"
    exec tmux attach -t "$SESSION"
  fi

  tmux new-session -d -s "$SESSION" -n pipeline \
    "bash -lc 'test -f ~/ml_env/bin/activate && . ~/ml_env/bin/activate; cd ~; \
     echo [\$(date -Is)] starting trading pipeline | tee -a $LOG_DIR/pipeline.log; \
     python3 ~/run_adaptive_trading.py 2>&1 | tee -a $LOG_DIR/pipeline.log'"

  tmux new-window  -t "$SESSION" -n news \
    "bash -lc '~/jobs/run_news_ingestion.sh 2>&1 | tee -a $LOG_DIR/news.log'"

  if [ -f "$DC" ]; then
    tmux new-window  -t "$SESSION" -n monitoring \
      "bash -lc 'docker compose -f $DC logs -f 2>&1 | tee -a $LOG_DIR/monitoring.log'"
  fi

  tmux new-window  -t "$SESSION" -n hb \
    "bash -lc 'python3 ~/jobs/heartbeat_cron.py 2>&1 | tee -a $LOG_DIR/hb.log'"

  tmux select-window -t "$SESSION":1
  echo "Session created. Attach with: tmux attach -t $SESSION"
else
  echo "WARN: tmux not found; running in background with nohup."
  ( test -f ~/ml_env/bin/activate && . ~/ml_env/bin/activate; python3 ~/run_adaptive_trading.py ) \
      >"$LOG_DIR/pipeline.out" 2>"$LOG_DIR/pipeline.err" &
  ~/jobs/run_news_ingestion.sh   >"$LOG_DIR/news.out"     2>"$LOG_DIR/news.err" &
  echo "Started bg jobs. Tail logs in $LOG_DIR."
fi
# --- Omega orders sidecar (idempotent) ---
if tmux has-session -t "$SESSION" 2>/dev/null; then
  if ! tmux list-windows -t "$SESSION" | grep -q '\<orders\>'; then
    tmux new-window -t "$SESSION" -n orders "bash -lc 'IBKR_HOST=${IBKR_HOST:-127.0.0.1} IBKR_PORT=${IBKR_PORT:-4002} IBKR_ORDERS_CLIENT_ID=${IBKR_ORDERS_CLIENT_ID:-9007} DRY_RUN=${DRY_RUN:-1} ~/orders/start_orders_bridge.sh'"
  fi
fi
# --- end orders sidecar ---

# --- Omega IB holder (keeps one client connected) ---
if tmux has-session -t "$SESSION" 2>/dev/null; then
  if [ "${ENABLE_IB_HOLDER:-1}" = "1" ]; then
    if ! tmux list-windows -t "$SESSION" | grep -q '\<ib-hold\>'; then
      tmux new-window -t "$SESSION" -n ib-hold "bash -lc 'IBKR_HOST=${IBKR_HOST:-127.0.0.1} IBKR_PORT=${IBKR_PORT:-4002} IBKR_HOLDER_CLIENT_ID=${IBKR_HOLDER_CLIENT_ID:-9006} ~/jobs/start_ib_holder.sh'"
    fi
  fi
fi
# --- end ib holder ---
